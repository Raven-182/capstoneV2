{"ast":null,"code":"var _jsxFileName = \"/Users/raven/CapstoneV2/capstone-project/src/components/Transcript.js\";\nimport React, { Component } from 'react';\nimport './Transcript.css';\nclass Transcript extends Component {\n  constructor(props) {\n    super(props);\n    this.downloadTranscript = () => {\n      const transcriptBlob = new Blob([this.state.transcriptText], {\n        type: 'text/plain'\n      });\n      const downloadLink = document.createElement('a');\n      downloadLink.href = URL.createObjectURL(transcriptBlob);\n      downloadLink.download = 'transcript.txt';\n      downloadLink.click();\n    };\n    this.copyTranscriptToClipboard = () => {\n      navigator.clipboard.writeText(this.state.transcriptText).then(() => {\n        alert('Transcript copied to clipboard!');\n      }).catch(error => {\n        console.error('Failed to copy transcript: ', error);\n      });\n    };\n    this.state = {\n      transcriptText: `Speaker 1: Hello there!\\nSpeaker 2: Hi! How are you?\\nSpeaker 1: I'm doing well, thank you. How about you?\\nSpeaker 2: I'm good too. What brings you here today?\\nSpeaker 1: I wanted to discuss our upcoming project and get your input on it.\\nSpeaker 2: Sure, I'd be happy to help. Let's dive into it.`\n    };\n  }\n  render() {\n    const transcriptLines = this.state.transcriptText.split('\\n');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transcript-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"Transcript\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transcript-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, transcriptLines.map((line, index) => /*#__PURE__*/React.createElement(\"p\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, line))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.downloadTranscript,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, \"Download Transcript\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.copyTranscriptToClipboard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, \"Copy Transcript\")));\n  }\n}\nexport default Transcript;","map":{"version":3,"names":["React","Component","Transcript","constructor","props","downloadTranscript","transcriptBlob","Blob","state","transcriptText","type","downloadLink","document","createElement","href","URL","createObjectURL","download","click","copyTranscriptToClipboard","navigator","clipboard","writeText","then","alert","catch","error","console","render","transcriptLines","split","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","line","index","key","onClick"],"sources":["/Users/raven/CapstoneV2/capstone-project/src/components/Transcript.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './Transcript.css';\n\nclass Transcript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transcriptText: `Speaker 1: Hello there!\\nSpeaker 2: Hi! How are you?\\nSpeaker 1: I'm doing well, thank you. How about you?\\nSpeaker 2: I'm good too. What brings you here today?\\nSpeaker 1: I wanted to discuss our upcoming project and get your input on it.\\nSpeaker 2: Sure, I'd be happy to help. Let's dive into it.`\n    };\n  }\n\n  downloadTranscript = () => {\n    const transcriptBlob = new Blob([this.state.transcriptText], { type: 'text/plain' });\n    const downloadLink = document.createElement('a');\n    downloadLink.href = URL.createObjectURL(transcriptBlob);\n    downloadLink.download = 'transcript.txt';\n    downloadLink.click();\n  };\n\n  copyTranscriptToClipboard = () => {\n    navigator.clipboard.writeText(this.state.transcriptText)\n      .then(() => {\n        alert('Transcript copied to clipboard!');\n      })\n      .catch((error) => {\n        console.error('Failed to copy transcript: ', error);\n      });\n  };\n\n  render() {\n    const transcriptLines = this.state.transcriptText.split('\\n');\n\n    return (\n      <div className=\"transcript-container\">\n        <h5>Transcript</h5>\n        <div className=\"transcript-text\">\n          {transcriptLines.map((line, index) => (\n            <p key={index}>{line}</p>\n          ))}\n        </div>\n        <div className=\"button-container\">\n          <button onClick={this.downloadTranscript}>\n            Download Transcript\n          </button>\n          <button onClick={this.copyTranscriptToClipboard}>\n            Copy Transcript\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Transcript;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,kBAAkB;AAEzB,MAAMC,UAAU,SAASD,SAAS,CAAC;EACjCE,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAMfC,kBAAkB,GAAG,MAAM;MACzB,MAAMC,cAAc,GAAG,IAAIC,IAAI,CAAC,CAAC,IAAI,CAACC,KAAK,CAACC,cAAc,CAAC,EAAE;QAAEC,IAAI,EAAE;MAAa,CAAC,CAAC;MACpF,MAAMC,YAAY,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MAChDF,YAAY,CAACG,IAAI,GAAGC,GAAG,CAACC,eAAe,CAACV,cAAc,CAAC;MACvDK,YAAY,CAACM,QAAQ,GAAG,gBAAgB;MACxCN,YAAY,CAACO,KAAK,CAAC,CAAC;IACtB,CAAC;IAAA,KAEDC,yBAAyB,GAAG,MAAM;MAChCC,SAAS,CAACC,SAAS,CAACC,SAAS,CAAC,IAAI,CAACd,KAAK,CAACC,cAAc,CAAC,CACrDc,IAAI,CAAC,MAAM;QACVC,KAAK,CAAC,iCAAiC,CAAC;MAC1C,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD,CAAC,CAAC;IACN,CAAC;IArBC,IAAI,CAAClB,KAAK,GAAG;MACXC,cAAc,EAAG;IACnB,CAAC;EACH;EAoBAmB,MAAMA,CAAA,EAAG;IACP,MAAMC,eAAe,GAAG,IAAI,CAACrB,KAAK,CAACC,cAAc,CAACqB,KAAK,CAAC,IAAI,CAAC;IAE7D,oBACE9B,KAAA,CAAAa,aAAA;MAAKkB,SAAS,EAAC,sBAAsB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACnCrC,KAAA,CAAAa,aAAA;MAAAmB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAI,YAAc,CAAC,eACnBrC,KAAA,CAAAa,aAAA;MAAKkB,SAAS,EAAC,iBAAiB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAC7BR,eAAe,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC/BxC,KAAA,CAAAa,aAAA;MAAG4B,GAAG,EAAED,KAAM;MAAAR,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEE,IAAQ,CACzB,CACE,CAAC,eACNvC,KAAA,CAAAa,aAAA;MAAKkB,SAAS,EAAC,kBAAkB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC/BrC,KAAA,CAAAa,aAAA;MAAQ6B,OAAO,EAAE,IAAI,CAACrC,kBAAmB;MAAA2B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,qBAElC,CAAC,eACTrC,KAAA,CAAAa,aAAA;MAAQ6B,OAAO,EAAE,IAAI,CAACvB,yBAA0B;MAAAa,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,iBAEzC,CACL,CACF,CAAC;EAEV;AACF;AAEA,eAAenC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}